image: Visual Studio 2017

environment:
    matrix:
    - QT: C:\Qt\5.10.1\msvc2017_64
      PLATFORM: amd64
      COMPILER: msvc
      VSVER: 14
    WEBHOOK_URL:
      secure: Exy7n5zWBkYknrvXF14ZF5ScCpEZTGDnGMwW7rh5xGQdnyEuE2i7yjngmgty9AbxcXn7zKBOa1s3J+JSmpbviBRs8Ry4I+CfRyNH1ojtfHT1Bqb+DMcku83VuVSneN5bCqbWtvRINXe2VU7EcC61Vy0TQD/ML+ugoOa/huWVj2s=
    CODECOV_TOKEN:
      secure: uzdKXr9nPEGQi8hfQxShwSMKkQicUmjs/5n1dWj9j6Drr8X/wuawzaVYQeqdxBPB

clone_depth: 1

init:
    - set TAG_NAME=%APPVEYOR_REPO_TAG_NAME%

install:
    - git submodule update --init --recursive
    - ps: .\installOpenCppCoverage.ps1
    - ps: python -m pip install --upgrade pip
    - ps: python -m pip install codecov

build_script:
    - ps: $env:QTDIR = "C:\Qt\5.10.1\msvc2017_64\lib\cmake\Qt5"
    - ps: .\test.ps1

on_success:
    - ps: Invoke-RestMethod https://raw.githubusercontent.com/symboxtra/appveyor-discord-webhook/master/send.ps1 -o send.ps1
    - ps: if ($env:WEBHOOK_URL.length -ne 0) { ./send.ps1 success $env:WEBHOOK_URL } else { Write-Host "WEBHOOK_URL inaccessible." } # Send Discord Webhook only when secure env vars can be decrypted
    - ps: if ($env:CODECOV_TOKEN.length -ne 0) { codecov --root .. --disable gcov -f cobertura.xml -t $env:CODECOV_TOKEN } else { Write-Host "CODECOV_TOKEN inaccessible." } # ^^

on_failure:
    - ps: Invoke-RestMethod https://raw.githubusercontent.com/symboxtra/appveyor-discord-webhook/master/send.ps1 -o send.ps1
    - ps: if ($env:WEBHOOK_URL.length -ne 0) { ./send.ps1 failure $env:WEBHOOK_URL } # Send Discord Webhook only when secure env vars can be decrypted
